## ALUMNO: Edwin Giovanni Gonzalez Mata
## Segundo Ejercicio: Predicci?n de Series Temporales
## -------------------------------------------------------------------------
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
## Carga de datos a Dataset
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
## Cambiando nombre de las columnas
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
## Analisis de datos del dataset
str(MilkProd)
head(MilkProd)
tail(MilkProd)
## Se observan nulos, se procede a elilminarlos
MilkProd <- na.omit(MilkProd)
summary(MilkProd)
## Ploteando Dataset
plot(MilkProd)
## Convertimos datos a series temporales, para poder analisar datos
MilkProdTS=ts(MilkProd$Production,frequency=12,start=1962)
## Se hace un PLOT y se observan tendendias crecientes con el tiempo
plot(MilkProdTS)
abline(reg=lm(MilkProdTS~time(MilkProdTS)))
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
tsdisplay(MilkProdTS)  # se ve clara la tendencia y el patron anual.
## -------------------------------------------------------------------------
## SCRIPT: Practice2.R
## CURSO: Master en Big Data y Business Analytics
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## FECHA: 21/12/2016
## ALUMNO: Mark Wellings
## -------------------------------------------------------------------------
##### 1. Setting working directory #####
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2/Mark")
### Loading and reviewing data set###
milk=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(milk)
#Renaming the 2nd column
library(data.table)
colnames(milk)
setnames(milk, "Monthly.milk.production..pounds.per.cow..Jan.62...Dec.75", "Production")
head(milk)
plot(milk)
summary(milk)
#There is an NA in my dataframe
is.na(milk)
# Eliminating last row:
milk[169,]
milk <- milk[-169,]
#NA eliminated.
summary(milk)
# Converting dataframe to timeseries
milktime <- ts(milk$Production, frequency=12, start=1962)
plot(milktime)
abline(reg=lm(milktime~time(milktime)))
par(mar = rep(2, 4)) # to display plot
acf(milktime,plot=TRUE)
pacf(milktime,plot=TRUE)
tsdisplay(milktime)
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## ALUMNO: Edwin Giovanni Gonzalez Mata
## Segundo Ejercicio: Predicci?n de Series Temporales
## -------------------------------------------------------------------------
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
## Carga de datos a Dataset
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
## Cambiando nombre de las columnas
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
## Analisis de datos del dataset
str(MilkProd)
head(MilkProd)
tail(MilkProd)
## Se observan nulos, se procede a elilminarlos
MilkProd <- na.omit(MilkProd)
summary(MilkProd)
## Ploteando Dataset
plot(MilkProd)
## Convertimos datos a series temporales, para poder analisar datos
MilkProdTS=ts(MilkProd$Production,frequency=12,start=1962)
## Se hace un PLOT y se observan tendendias crecientes con el tiempo
plot(MilkProdTS)
abline(reg=lm(MilkProdTS~time(MilkProdTS)))
## HAcemos un PLOT sobre un periodo de tiempo
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
## Vemos una tendendia clara en relacion al tiempo (anual), no es una situacion estacionaria.
tsdisplay(MilkProdTS)
Auto_milk_model=auto.arima(Datosts,trace=TRUE) # esto lo hace todo
Auto_milk_model=auto.arima(MilkProdTS,trace=TRUE) # esto lo hace todo
## -------------------------------------------------------------------------
## SCRIPT: Practice2.R
## CURSO: Master en Big Data y Business Analytics
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## FECHA: 21/12/2016
## ALUMNO: Mark Wellings
## -------------------------------------------------------------------------
##### 1. Setting working directory #####
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2/Mark")
### Loading and reviewing data set###
milk=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(milk)
#Renaming the 2nd column
library(data.table)
colnames(milk)
setnames(milk, "Monthly.milk.production..pounds.per.cow..Jan.62...Dec.75", "Production")
head(milk)
plot(milk)
summary(milk)
#There is an NA in my dataframe
is.na(milk)
# Eliminating last row:
milk[169,]
milk <- milk[-169,]
#NA eliminated.
summary(milk)
# Converting dataframe to timeseries
milktime <- ts(milk$Production, frequency=12, start=1962)
plot(milktime)
abline(reg=lm(milktime~time(milktime)))
# AutoCorrelation Function and Partial AutoCorrelationFunction
par(mar = rep(2, 4)) # to display plot
acf(milktime,plot=TRUE)
pacf(milktime,plot=TRUE)
# We can see that mean, variance and autocorrelation are not constant overtime and are non stationary.
# The correlation is out of range, which indicates the TS is not stationary.
# In this case we could use the ARIMA model for prediction.
tsdisplay(milktime)
# Prediction of Production (dependent variable)
library(forecast)
value <- milk$Production
value
sensor <- ts(value, frequency=12, start=1962)
sensor
fit <- auto.arima(sensor, trace = TRUE)
fcast <- forecast(fit, h=24) # Forecasting two years
plot(fcast)
grid()
fcast
fcast # Forecasting for two years.
summary(fit)
hist(residuals(fit))
qqnorm(residuals(fit)); qqline(residuals(fit),col=2)
MilkProdTS_Model=auto.arima(MilkProdTS,trace=TRUE) # esto lo hace todo
MilkProdTS_Model=auto.arima(MilkProdTS,trace=TRUE) # esto lo hace todo
summary(MilkProdTS_Model)
tsdisplay(residuals(Auto_milk_model)) #para ver los residuos de la prediccion.
tsdisplay(residuals(MilkProdTS_Model)) #para ver los residuos de la prediccion.
tsdisplay(residuals(MilkProdTS_Model)) #para ver los residuos de la prediccion.
hist(residuals(MilkProdTS_Model))
qqnorm(residuals(MilkProdTS_Model)); qqline(residuals(MilkProdTS_Model),col=2)
plot(forecast(MilkProdTS_Model,h=24)) #plot de la prediccion
forecast(MilkProdTS_Model,h=24)
Result=arima(MilkProdTS,order=c(0,1,1),seasonal=list(order = c(0, 1, 1)))
plot(forecast(Result,h=24))
summary(Result)
grid()
## -------------------------------------------------------------------------
## SCRIPT: Practice2.R
## CURSO: Master en Big Data y Business Analytics
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## FECHA: 21/12/2016
## ALUMNO: Mark Wellings
## -------------------------------------------------------------------------
##### 1. Setting working directory #####
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2/Mark")
### Loading and reviewing data set###
milk=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(milk)
#Renaming the 2nd column
library(data.table)
colnames(milk)
setnames(milk, "Monthly.milk.production..pounds.per.cow..Jan.62...Dec.75", "Production")
head(milk)
plot(milk)
summary(milk)
#There is an NA in my dataframe
is.na(milk)
# Eliminating last row:
milk[169,]
milk <- milk[-169,]
#NA eliminated.
summary(milk)
# Converting dataframe to timeseries
milktime <- ts(milk$Production, frequency=12, start=1962)
plot(milktime)
abline(reg=lm(milktime~time(milktime)))
# AutoCorrelation Function and Partial AutoCorrelationFunction
par(mar = rep(2, 4)) # to display plot
acf(milktime,plot=TRUE)
pacf(milktime,plot=TRUE)
# We can see that mean, variance and autocorrelation are not constant overtime and are non stationary.
# The correlation is out of range, which indicates the TS is not stationary.
# In this case we could use the ARIMA model for prediction.
tsdisplay(milktime)
# Prediction of Production (dependent variable)
library(forecast)
value <- milk$Production
sensor <- ts(value, frequency=12, start=1962)
fit <- auto.arima(sensor, trace = TRUE)
fcast <- forecast(fit, h=24) # Forecasting two years
plot(fcast)
grid()
fcast # Forecasting for two years.
Result
Result
forecast(MilkProdTS_Model,h=24)
## -------------------------------------------------------------------------
## SCRIPT: Practice2.R
## CURSO: Master en Big Data y Business Analytics
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## FECHA: 21/12/2016
## ALUMNO: Mark Wellings
## -------------------------------------------------------------------------
##### 1. Setting working directory #####
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2/Mark")
### Loading and reviewing data set###
milk=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(milk)
#Renaming the 2nd column
library(data.table)
colnames(milk)
setnames(milk, "Monthly.milk.production..pounds.per.cow..Jan.62...Dec.75", "Production")
head(milk)
plot(milk)
summary(milk)
#There is an NA in my dataframe
is.na(milk)
# Eliminating last row:
milk[169,]
milk <- milk[-169,]
#NA eliminated.
summary(milk)
# Converting dataframe to timeseries
milktime <- ts(milk$Production, frequency=12, start=1962)
plot(milktime)
abline(reg=lm(milktime~time(milktime)))
# AutoCorrelation Function and Partial AutoCorrelationFunction
par(mar = rep(2, 4)) # to display plot
acf(milktime,plot=TRUE)
pacf(milktime,plot=TRUE)
# We can see that mean, variance and autocorrelation are not constant overtime and are non stationary.
# The correlation is out of range, which indicates the TS is not stationary.
# In this case we could use the ARIMA model for prediction.
tsdisplay(milktime)
# Prediction of Production (dependent variable)
library(forecast)
value <- milk$Production
sensor <- ts(value, frequency=12, start=1962)
fit <- auto.arima(sensor, trace = TRUE)
fcast <- forecast(fit, h=24) # Forecasting two years
plot(fcast)
grid()
fcast # Forecasting for two years.
#Verifying model
summary(fit)
hist(residuals(fit))
qqnorm(residuals(fit)); qqline(residuals(fit),col=2)
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## ALUMNO: Edwin Giovanni Gonzalez Mata
## Segundo Ejercicio: Predicci?n de Series Temporales
## -------------------------------------------------------------------------
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
## Carga de datos a Dataset
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
## Cambiando nombre de las columnas
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
## Analisis de datos del dataset
str(MilkProd)
head(MilkProd)
tail(MilkProd)
## Se observan nulos, se procede a elilminarlos
MilkProd <- na.omit(MilkProd)
summary(MilkProd)
## Ploteando Dataset
plot(MilkProd)
## Convertimos datos a series temporales, para poder analisar datos
MilkProdTS=ts(MilkProd$Production,frequency=12,start=1962)
## Se hace un PLOT y se observan tendendias crecientes con el tiempo
plot(MilkProdTS)
abline(reg=lm(MilkProdTS~time(MilkProdTS)))
## HAcemos un PLOT sobre un periodo de tiempo
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
## Vemos una tendendia clara en relacion al tiempo (anual), no es una situacion estacionaria.
tsdisplay(MilkProdTS)
# Para este caso, podemos utilizar el modelo ARIMA para prediccion.
MilkProdTS_Model=auto.arima(MilkProdTS,trace=TRUE) # esto lo hace todo
summary(MilkProdTS_Model)
## R/  Best model: ARIMA(0,1,1)(0,1,1)[12]
## Visualizamos residuos de la prediccion.
tsdisplay(residuals(MilkProdTS_Model))
hist(residuals(MilkProdTS_Model))
qqnorm(residuals(MilkProdTS_Model)); qqline(residuals(MilkProdTS_Model),col=2)
## Hacemos un Plot de la Prediccion y mostramos la prediccion
plot(forecast(MilkProdTS_Model,h=24))
forecast(MilkProdTS_Model,h=24)
Result=arima(MilkProdTS,order=c(0,1,1),seasonal=list(order = c(0, 1, 1)))
plot(forecast(Result,h=24))
grid()
summary(Result)
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
str(MilkProd)
head(MilkProd)
tail(MilkProd)
MilkProd <- na.omit(MilkProd)
summary(MilkProd)
plot(MilkProd)
MilkProdTS=ts(MilkProd$Production,frequency=12,start=1962)
plot(MilkProdTS)
abline(reg=lm(MilkProdTS~time(MilkProdTS)))
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
tsdisplay(MilkProdTS)
MilkProdTS_Model=auto.arima(MilkProdTS,trace=TRUE) # esto lo hace todo
summary(MilkProdTS_Model)
tsdisplay(residuals(MilkProdTS_Model))
hist(residuals(MilkProdTS_Model))
qqnorm(residuals(MilkProdTS_Model)); qqline(residuals(MilkProdTS_Model),col=2)
plot(forecast(MilkProdTS_Model,h=24))
forecast(MilkProdTS_Model,h=24)
Result=arima(MilkProdTS,order=c(0,1,1),seasonal=list(order = c(0, 1, 1)))
plot(forecast(Result,h=24))
grid()
summary(Result)
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## ALUMNO: Edwin Giovanni Gonzalez Mata
## Segundo Ejercicio: Prediccion de Series Temporales
## -------------------------------------------------------------------------
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
## Carga de datos a Dataset
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
## Cambiando nombre de las columnas
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
## Analisis de datos del dataset
str(MilkProd)
head(MilkProd)
tail(MilkProd)
## Se observan nulos, se procede a elilminarlos
MilkProd <- na.omit(MilkProd)
summary(MilkProd)
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## ALUMNO: Edwin Giovanni Gonzalez Mata
## Segundo Ejercicio: Prediccion de Series Temporales
## -------------------------------------------------------------------------
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
## Carga de datos a Dataset
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
## Cambiando nombre de las columnas
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
## Analisis de datos del dataset
str(MilkProd)
head(MilkProd)
tail(MilkProd)
summary(MilkProd)
## ASIGNATURA: Analisis Estadistico
## PROFESOR: Antonio Pita Lozano
## ALUMNO: Edwin Giovanni Gonzalez Mata
## Segundo Ejercicio: Prediccion de Series Temporales
## -------------------------------------------------------------------------
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
## Carga de datos a Dataset
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
## Cambiando nombre de las columnas
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
## Analisis de datos del dataset
str(MilkProd)
head(MilkProd)
tail(MilkProd)
summary(MilkProd)
## Se observan nulos, se procede a elilminarlos
MilkProd <- na.omit(MilkProd)
summary(MilkProd)
## Ploteando Dataset
plot(MilkProd)
## Convertimos datos a series temporales, para poder analisar datos
MilkProdTS=ts(MilkProd$Production,frequency=12,start=1962)
## Se hace un PLOT y se observan tendendias crecientes con el tiempo
plot(MilkProdTS)
abline(reg=lm(MilkProdTS~time(MilkProdTS)))
## HAcemos un PLOT sobre un periodo de tiempo
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
## Vemos una tendendia clara en relacion al tiempo (anual), no es una situacion estacionaria.
tsdisplay(MilkProdTS)
# Para este caso, podemos utilizar el modelo ARIMA para prediccion.
MilkProdTS_Model=auto.arima(MilkProdTS,trace=TRUE) # esto lo hace todo
summary(MilkProdTS_Model)
## R/  Best model: ARIMA(0,1,1)(0,1,1)[12]
## Visualizamos residuos de la prediccion.
tsdisplay(residuals(MilkProdTS_Model))
hist(residuals(MilkProdTS_Model))
qqnorm(residuals(MilkProdTS_Model)); qqline(residuals(MilkProdTS_Model),col=2)
## Hacemos un Plot de la Prediccion y mostramos la prediccion
MilkProd_FC = forecast(MilkProdTS_Model,h=24)
plot(MilkProd_FC)
MilkProd_FC
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
str(MilkProd)
head(MilkProd)
tail(MilkProd)
summary(MilkProd)
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
str(MilkProd)
summary(MilkProd)
MilkProd <- na.omit(MilkProd)
summary(MilkProd)
plot(MilkProd)
MilkProdTS=ts(MilkProd$Production,frequency=12,start=1962)
plot(MilkProdTS)
abline(reg=lm(MilkProdTS~time(MilkProdTS)))
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
tsdisplay(MilkProdTS)
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
par(mfrow=c(1,2))
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
par(mfrow=c(1,1))
tsdisplay(MilkProdTS)
MilkProdTS_Model=auto.arima(MilkProdTS,trace=TRUE) # esto lo hace todo
summary(MilkProdTS_Model)
tsdisplay(residuals(MilkProdTS_Model))
hist(residuals(MilkProdTS_Model))
tsdisplay(residuals(MilkProdTS_Model))
hist(residuals(MilkProdTS_Model))
qqnorm(residuals(MilkProdTS_Model)); qqline(residuals(MilkProdTS_Model),col=2)
par(mfrow=c(1,2))
hist(residuals(MilkProdTS_Model))
qqnorm(residuals(MilkProdTS_Model)); qqline(residuals(MilkProdTS_Model),col=2)
par(mfrow=c(1,1))
MilkProd_FC = forecast(MilkProdTS_Model,h=24)
plot(MilkProd_FC)
MilkProd_FC
Result=arima(MilkProdTS,order=c(0,1,1),seasonal=list(order = c(0, 1, 1)))
plot(forecast(Result,h=24))
grid()
summary(Result)
library(forecast)
setwd("C:/Users/Giovanni/Documents/Master/TrabajosFinales/Analisis Estadistico/Practica 2")
MilkProd=read.csv("monthly-milk-production-pounds-p.csv",head=TRUE,sep=";")
head(MilkProd)
colnames(MilkProd) <- c("Date","Production")
head(MilkProd)
str(MilkProd)
summary(MilkProd)
MilkProd <- na.omit(MilkProd)
summary(MilkProd)
plot(MilkProd)
MilkProdTS=ts(MilkProd$Production,frequency=12,start=1962)
plot(MilkProdTS)
abline(reg=lm(MilkProdTS~time(MilkProdTS)))
par(mfrow=c(1,2))
acf(MilkProdTS,lag.max=48)
pacf(MilkProdTS,lag.max=48)
par(mfrow=c(1,1))
tsdisplay(MilkProdTS)
MilkProdTS_Model=auto.arima(MilkProdTS,trace=TRUE) # esto lo hace todo
summary(MilkProdTS_Model)
tsdisplay(residuals(MilkProdTS_Model))
par(mfrow=c(1,2))
hist(residuals(MilkProdTS_Model))
qqnorm(residuals(MilkProdTS_Model)); qqline(residuals(MilkProdTS_Model),col=2)
par(mfrow=c(1,1))
MilkProd_FC = forecast(MilkProdTS_Model,h=24)
plot(MilkProd_FC)
MilkProd_FC
Result=arima(MilkProdTS,order=c(0,1,1),seasonal=list(order = c(0, 1, 1)))
plot(forecast(Result,h=24))
grid()
summary(Result)
